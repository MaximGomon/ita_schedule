@using ITA.Schedule.Models
@using Kendo.Mvc.UI
@using FormMethod = System.Web.Mvc.FormMethod

@model ITA.Schedule.Models.TeacherAddUpdateModel

@{
    ViewBag.Title = "UpdateTeacher";
    Layout = "~/Views/Admin/AdminBase.cshtml";
    
    var teacherSubjects = Model.Teacher.Subjects.Select(teacherSubject => new SubjectModel() {Id = teacherSubject.Id, Name = teacherSubject.Name}).ToList();
}

<script src="~/kendo/kendo.all.min.js"></script>
<script src="~/kendo/kendo.aspnetmvc.min.js"></script>
<script src="~/Scripts/teacher-validation.js"></script>
<link href="~/kendo/kendo_theme/kendo.bootstrap.min.css" rel="stylesheet" />
<link href="~/kendo/kendo_theme/kendo.common.min.css" rel="stylesheet" />
<link href="~/Content/UpdateTeacher.css" rel="stylesheet" />

@using (Html.BeginForm("UpdateTeacher", "Admin", FormMethod.Post))
{
    @Html.ValidationSummary()
    @Html.TextBoxFor(x => x.Teacher.Id, Model.Teacher.Id.ToString(), new { @style = "display: none;" })
    <h2>Update teacher name</h2>
    @Html.TextBox("Name", Model.Teacher.Name, new { @class = "form-control", @oninput = "validateAddTeacherForm()" })

    
    <div class="demo-section k-content">
        <h2>Assign subjects</h2>
        @(Html.Kendo().MultiSelect()
                .Name("SubjectIds")
                .DataValueField("Id")
                .DataTextField("Name")
                .BindTo(Model.Subjects)
                .Value(teacherSubjects)
                .HtmlAttributes(new { onchange = "validateAddTeacherForm()" })
        )
    </div>
    <br />
    <input class="btn btn-success" type="submit" value="Update Teacher" id="btn-submit" disabled/>
    @Html.ActionLink("Cancel", "ShowTeachers", null, new { @class = "btn btn-default" })
}
