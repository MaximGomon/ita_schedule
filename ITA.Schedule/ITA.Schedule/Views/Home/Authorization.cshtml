@model UserViewModel
@using ITA.Schedule.Models
@{AlertsMessege alert = ViewBag.AlertsMessege;}
@{Layout = null;}

<!DOCTYPE html>

<html lang="en">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Authorization</title>
    
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />

    <style>
        body {
            background-color: #4B75A4;
            /*background-image: url(/Content/images/Hexagon-1.jpg);*/
            background-size: 100%;
        }

        .nav-tabs > li {
            width: 50%;
            text-align: center;
        }
    </style>
</head>
<body>

    <div class="modal-dialog" role="document" style="margin-top: 10%">

        <!-- Alert -->
        <div id="AleartConteinerLogin">

            @{
                if (alert != null)
                {
                    <div class="alert @alert.ClassNames[(int) alert.Status]" role="alert">
                        <strong>@alert.Tittle</strong> @alert.Text
                    </div>
                }
            }

        </div>
        <!--end Alert -->

        <div class="modal-content">

            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item active" style="">
                    <a class="nav-link " data-toggle="tab" href="#login" role="tab">Login</a>
                </li>
                <li class="nav-item" style="">
                    <a class="nav-link" data-toggle="tab" href="#profile" role="tab">Register</a>
                </li>
            </ul>

            <div class="tab-content">

                <div class="tab-pane active" id="login" role="tabpanel" style="">

                    <div class="modal-body">

                        <div data-toggle="validator" role="form" id="login-form">

                            @using (Html.BeginForm("Login", "Home", FormMethod.Post))
                            {                                

                                <div class="form-group">
                                    <div class="input-group">
                                        @Html.LabelFor(x => x.Email, new { @class = "input-group-addon"})
                                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "YourEmail@gmail.com", @type = "email" })
                                    </div>
                                    @Html.ValidationMessageFor(x => x.Email, null, new { @class = "help-block" })
                                </div>

                                <div class="form-group">
                                    <div class="input-group">
                                        @Html.LabelFor(x => x.Password, new { @class = "input-group-addon"})
                                        @Html.TextBoxFor(x => x.Password, new { @class = "form-control", @placeholder = "Enter your password", @type = "password" })
                                    </div>
                                    @Html.ValidationMessageFor(x => x.Password, null, new { @class = "help-block" })
                                </div>

                                <div class="inline">
                                    <input class="btn btn-primary" type="submit" value="Login" />
                                    <a href="#" style="margin-left: 15px">forgot your password?</a>
                                </div>

                            }

                        </div>

                    </div>
                    
                </div>

                <div class="tab-pane" id="profile" role="tabpanel">

                    <div class="modal-body">

                        <div data-toggle="validator" role="form" id="Register-form">
                            
                            @using (Html.BeginForm("Register", "Home", FormMethod.Post))
                            {

                                <div class="form-group">
                                    <div class="input-group">
                                        @Html.LabelFor(x => x.FirstName, new { @class = "input-group-addon"})
                                        @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", @placeholder = "First Name", @type = "text" })
                                    </div>
                                    @Html.ValidationMessageFor(x => x.FirstName, null, new { @class = "help-block" })
                                </div>

                                <div class="form-group">
                                    <div class="input-group">
                                        @Html.LabelFor(x => x.LastName, new { @class = "input-group-addon"})
                                        @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", @placeholder = "Last Name", @type = "text" })
                                    </div>
                                    @Html.ValidationMessageFor(x => x.LastName, null, new { @class = "help-block" })
                                </div>

                                <div class="form-group">
                                    <div class="input-group">
                                        @Html.LabelFor(x => x.Email, new { @class = "input-group-addon" })
                                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "YourEmail@gmail.com", @type = "email" })
                                    </div>
                                    @Html.ValidationMessageFor(x => x.Email, null, new { @class = "help-block" })
                                </div>

                                <div class="form-group">
                                    <div class="input-group">
                                        @Html.LabelFor(x => x.Password, new { @class = "input-group-addon" })
                                        @Html.TextBoxFor(x => x.Password, new { @class = "form-control", @placeholder = "Password", @type = "password" })
                                    </div>
                                    @Html.ValidationMessageFor(x => x.Password, null, new { @class = "help-block" })
                                </div>

                                <div class="form-group">
                                    <div class="input-group">
                                        @Html.LabelFor(x => x.Role, new { @class = "input-group-addon" })
                                        @Html.EnumDropDownListFor(x => x.Role, new { @class = "form-control" })
                                    </div>
                                    @Html.ValidationMessageFor(x => x.Role, null, new { @class = "help-block" })
                                </div>

                                <button class="btn btn-primary" type="submit">Register</button>

                            }
                        </div>

                    </div>

                </div>

            </div>

        </div>
    </div>

    <script src="~/Scripts/jquery-1.9.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

    <!-- script made for highlight not valid input field -->
    <script>
        (function ($) {
            var defaultOptions = {
                validClass: '',
                errorClass: 'has-error',
                highlight: function (element, errorClass, validClass) {
                    $(element).closest(".form-group")
                        .removeClass(validClass)
                        .addClass('has-error');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).closest(".form-group")
                    .removeClass('has-error')
                    .addClass(validClass);
                }
            };

            $.validator.setDefaults(defaultOptions);

            $.validator.unobtrusive.options = {
                errorClass: defaultOptions.errorClass,
                validClass: defaultOptions.validClass,
            };
        })(jQuery);
    </script>
    <!-- end script -->

</body>
</html>
