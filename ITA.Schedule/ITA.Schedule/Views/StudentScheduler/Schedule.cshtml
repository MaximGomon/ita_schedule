@using ITA.Schedule.Models
@using ITA.Schedule.Util
@using Kendo.Mvc.UI
@model ITA.Schedule.Models.UserFilterViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>

<head>
    <meta name="viewport" content="width=device-width" />
    <title>StudentHeader</title>

    <script src="~/Scripts/DatePicker-ua-locale.js"></script>
</head>
<body>
<div class="alert row">

@using (Html.BeginForm("Scheduler", "StudentScheduler"))
{
    <div class="col-md-12 row-bordered">
        <div class="col-md-2">
            @Html.TextBoxFor(model => model.Filter.StartDateTime, new {@id = "datepicker", @class = "col-md-offset-1 col-md-12"})
        </div>

        <div class="col-sm-2">
            @Html.DropDownListFor(x => x.Filter.FirstId, Model.Filter.FirstList, "Всі предмети", new {@class = "col-md-offset-1 col-md-11"})
        </div>

        <div class="col-md-2">
            @Html.DropDownListFor(x => x.Filter.SecondId, Model.Filter.SecondList, "Всі викладачі", new {@class = "col-md-offset-1 col-md-11"})

        </div>
        <div class="col-md-offset-1 btn-group" data-toggle="buttons" role="group" aria-label="...">
            <label id="day" class="btn btn-default">
                @Html.RadioButtonFor(model => model.Filter.MyTimePeriod, "day", new {name = "day", type="radio", autocomplete = "off", @checked=true }) День
            </label>

            <label id="week" class="btn btn-default">
                @Html.RadioButtonFor(model => model.Filter.MyTimePeriod, "week", new {name = "week", type = "radio", autocomplete = "off" }) Тиждень
            </label>
            <label id="month" class="btn btn-default">
                @Html.RadioButtonFor(model => model.Filter.MyTimePeriod, "month", new {name = "month", type = "radio", autocomplete = "off" }) Місяць
            </label>
        </div>
        <div class="col-md-offset-1 btn-group" role="group" aria-label="...">
            <button type="submit" class="btn btn-success"> Показати </button>
        </div>
    </div>
}
<div class="col-md-12">
        @if (Model.Scheduler != null && Model.Filter.MyTimePeriod == TimePeriod.Day)
        {
            <div class="table">

                
                    <div class="h3 alert alert-info info text-center">
                        <span class="text-center">
                            @Model.Scheduler.DayOfSchedule
                        </span>
                    </div>

                <table class="table table-bordered">
                    <thead>
                    <tr class="warning">

                        <th class="text-center">
                            Lesson
                        </th>
                        <th class="text-center">
                            Time
                        </th>
                        @foreach (var schedule in Model.Scheduler.ColumnHeaders)
                        {
                            <th class="text-center">
                                <span>@schedule.Key</span>
                            </th>
                        }

                    </tr>
                    </thead>
                    @{
                        var lessonNumber = 0;
                    
                                            foreach (var item in @Model.Scheduler.RowHeaders)
                                            {
                                                lessonNumber++;
                                                <tbody class="">
                            <th >
                                <span class="text-center">
                                    Пара @lessonNumber
                                </span>
                            </th>
                            <th >
                                <span class="text-center" >
                                    Початок о @item.ToShortTimeString()
                                </span>
                            </th>
                            @foreach (var teacher in Model.Scheduler.ColumnHeaders)
                            {
                                var lesson = Model.Scheduler.Events.FirstOrDefault(x => x.Name == teacher.Key && x.LessonNumber == lessonNumber);
                                if (lesson != null)
                                {
                                    <td class="text-center lesson" tabindex="0" data-toggle="popover" data-trigger="focus"
                                        data-container="body" data-html="true" idLesson="@lesson.ElementId">
                                        @lesson.Description
                                        
                                    </td>
                                }
                                else
                                {
                                    <td class="text-center lesson" tabindex="1" data-toggle="popover-empty"
                                        data-trigger="focus" data-html="true" data-container="body" idLesson=''>

                                    </td>
                                }
                            } </tbody>
                        }


                    }

                </table>
                <div id="popover-content-empty" class="hide">
                    <div id="deleteDiv">
                        <a id='addLesson' class="btn btn-success">Додати</a>
                    </div>
                </div>

                <div id="popover-content" class="hide" style="position: absolute">
                    <div>
                        <a id='updateLesson' class="btn btn-success">Змінити</a>
                    </div>
                    <div id ="deleteDiv">
                        <a id='deleteLesson' class="btn btn-danger">Видалити</a>
                    </div>
                </div>
            </div>
                        }

            @if (Model.ScheduleForWeek != null && Model.Filter.MyTimePeriod == TimePeriod.Week)
            {
                foreach (var day in Model.ScheduleForWeek)
                {
                    <div class="table">
                        <div class="h3 alert alert-info info col-sm-12 text-center">
                            <span class="text-center">
                                @day.DayOfSchedule
                            </span>
                        </div>

                        <table class="table table-bordered">
                            <thead>
                            <tr class="warning">

                                <th class="text-center">
                                    Lesson
                                </th>

                                <th class="text-center">
                                    Time
                                </th>

                                @foreach (var schedule in day.ColumnHeaders)
                                {
                                    <td class="text-center">
                                        <span>@schedule.Key</span>
                                    </td>
                                }

                            </tr>
                            </thead>
                            
                            @{
                                var lessonNumber = 0;
                                foreach (var item in @day.RowHeaders)
                                {
                                    //begin draw row
                                    lessonNumber++;
                                    <tbody>
                                            <th class="text-center">
                                                Пара @lessonNumber
                                            </th>
                                            <th class="text-center">
                                                Початок о @item.ToShortTimeString()
                                            </th>
                                            @foreach (var teacher in day.ColumnHeaders)
                                            {
                                                var lesson = day.Events.FirstOrDefault(x => x.Name == teacher.Key && x.LessonNumber == lessonNumber);
                                                if (lesson != null)
                                                {
                                                    <td class="text-center lesson" tabindex="0" data-toggle="popover" data-trigger="focus"
                                                        data-container="body" data-html="true" idLesson="@lesson.ElementId">
                                                        @lesson.Description

                                                    </td>
                                                }
                                                else
                                                {
                                                    <td class="text-center lesson" tabindex="1" data-toggle="popover-empty"
                                                        data-trigger="focus" data-html="true" data-container="body" idLesson=''></td>
                                                }
                                            }
                                    </tbody>
                                }

                            }
                        </table>
                        <div id="popover-content-empty" class="hide">
                            <div id="deleteDiv">
                                <a id='addLesson' class="btn btn-success">Додати</a>
                            </div>
                        </div>

                        <div id="popover-content" class="hide" style="position: absolute">
                            <div>
                                <a id='updateLesson' class="btn btn-success">Змінити</a>
                            </div>
                            <div id="deleteDiv">
                                <a id='deleteLesson' class="btn btn-danger">Видалити</a>
                            </div>
                        </div>
                    </div>
                                        }
                                    }
            @if (Model.Calendar != null && Model.Filter.MyTimePeriod == TimePeriod.Month)
            {
                <div class="col-md-12 alert text-center">
                    <span class="calendar-day">@($"{Model.Filter.StartDateTime.Date.ToString("MMMM")}") </span>
                </div>
                <div class="table">
                    <table class="table table-bordered">
                        <tr>
                            @foreach (var dayOfWeek in Model.Calendar.ColumnHeaders)
                            {
                                <th class="text-center">
                                    <span> @dayOfWeek</span>
                                </th>
                            }
                        </tr>



                        @for (;;)
                        {
                            if (Model.Calendar.FirstDayOfWeekInMonth > Model.Calendar.LastDayOfWeekInMonth)
                            {
                                break;
                            }
                            <tr class="">
                                @for (var j = 1; j < 8; j++)
                                {
                                    <td>
                                        <span class="text-center calendar-day col-md-12" style="background-color: lightgrey;">@Model.Calendar.FirstDayOfWeekInMonth.Day </span>
                                        @for (var i = 1; i < 8; i++)
                                        {

                                            var lesson = Model.Calendar.Lessons.Any(x => x.LessonNumber == i && x.LessonDate.Year == Model.Calendar.FirstDayOfWeekInMonth.Year
                                                                                         && x.LessonDate.Month == Model.Calendar.FirstDayOfWeekInMonth.Month
                                                                                         && x.LessonDate.Day == Model.Calendar.FirstDayOfWeekInMonth.Day);
                                            if (@lesson)
                                            {
                                                <span class="col-md-12" style="padding: 0; background-color: red;">@i </span>
                                            }
                                            else
                                            {
                                                <span class="col-md-12">@i</span>
                                            }

                                        }
                                    </td>
                                    Model.Calendar.FirstDayOfWeekInMonth = Model.Calendar.FirstDayOfWeekInMonth.AddDays(1);
                                }
                            </tr>
                        }
                    </table>
                </div>
            }

            
        </div>

<script type="text/javascript">
    var myidLesson;
    $(document)
        .ready(function() {

            var timeFromObject = new Date("@Model.Filter.StartDateTime.Date.ToString("MM/dd/yyyy")");
            $(function () {

                
                $.datepicker.setDefaults($.datepicker.regional['ua']);

                $("#datepicker").datepicker({ dateFormat: 'dd/mm/yy' }).datepicker("setDate", timeFromObject);
                $.datepicker.setDefaults($.datepicker.regional["uk"]);
            });

            
            $(".lesson").click( function() {
                myidLesson = (($(this).attr('idLesson')));
                $('#deleteLesson').attr("href", '/StudentScheduler/DeleteLesson/' + myidLesson);
                $('#updateLesson').attr("href", '/Lesson/UpdateLesson/' + myidLesson);
                $('#addLesson').attr("href", '/Lesson/AddLesson/' + myidLesson);
                console.log(myidLesson);
            });
            ////deleteLesson
            //$("#deleteLesson").click( function() {
            //    // myidLesson = (($(this).attr('idLesson')));
            //    console.log(myidLesson + 'click');
            //});
            //$(".deleteLesson").click( function() {
            //    // myidLesson = (($(this).attr('idLesson')));
            //    console.log(myidLesson + 'click');
            //});
            $("[data-toggle=popover]").popover({
                html: true,

                content: function() {
                    //console.log($(this).attr('idLesson'));
                    return $('#popover-content').html();
                }

            });
            //function myFunc() {
            //    console.log(myidLesson);
            //}
            $("[data-toggle=popover-empty]").popover({
                html: true,

                content: function() {
                    //console.log($(this).attr('idLesson'));
                    return $('#popover-content-empty').html();
                }

            });
            
            //$("#deleteLesson").on("click", function(){
            //    console.log("deleted");
            //});
            
            $('#popover-content').on("click", ".deleteLesson", function() {
                //alert("I was clicked");
                //window.location = '/Lesson/DeleteLesson/' + myidLesson;

                $('#deleteLesson').attr("href", '/Lesson/DeleteLesson/' + myidLesson);
            });
            //$(document).on("click", "#deleteLesson", function() {
            //    window.location = '/Lesson/Index';
            //});

            //function deletefunc() {
                
            //}
            //$('#exampleModal').on('show.bs.modal', function (event) {
            //    var button = $(event.relatedTarget); // Button that triggered the modal
            //    var recipient = button.data('whatever'); // Extract info from data-* attributes
            //    // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            //    // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            //    var modal = $(this);
            //    modal.find('.modal-title').text('New message to ' + recipient);
            //    modal.find('.modal-body input').val(recipient);
            //});


            switch (@((int)(Model.Filter.MyTimePeriod)))
            {
            case @((int)(TimePeriod.Day)):
                $("#day").addClass("active");
                break;

            case @((int)(TimePeriod.Month)):
                $("#month").addClass("active");
                break;

            case @((int)(TimePeriod.Week)):
                $("#week").addClass("active");
                break;
            default :
                $("#day").addClass("active");
                break;
            }
        });
</script>

</div>
</body>


@*@using Kendo.Mvc.UI
@model  ITA.Schedule.Models.StudentViewModel
@{
    Layout = "~/Views/Student/StudentHeader.cshtml";
}
    <div class="col-md-12">
    <div class="h3 alert alert-info info col-sm-12 text-center">
        <span class="text-center">
            @ViewBag.Date
        </span>
    </div>

        <div class="col-md-12" style="display: inline-block">
            <div style="width: @ViewBag.Width; display: inline-block">
                Lesson
            </div>
            <div style="width: @ViewBag.Width; display: inline-block">
                Time
            </div>
            @foreach (var schedule in Model.Scheduler.ColumnHeaders)
            {
                <div class="text-center" style="width: @ViewBag.Width; display: inline-block">
                    @Html.Label(schedule.Key)
                </div>
            }
        </div>
            @{
                var headers = new Dictionary<string, int>();

                var lessons = new List<string>();

                foreach (var item in lessons)
                {
                    //begin draw row
                    for (int i = 0; i < lessons.Count; i++)
                    {
                        if (headers[item] == i)
                        {
                            //draw lesson in cell
                        }
                        else
                        {
                            //draw empty cell
                        }
                    }
                    //end draw row
                }
            }


</div>*@



