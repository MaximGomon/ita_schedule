@model Schedule.IntIta.ViewModels.EventViewModel

@{
    ViewData["Title"] = "Create new event";
}

@section Scripts {

    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script type="text/javascript">
        
        $(document).ready(function() {
            $('#AutoCc').autocomplete({
                source: '/Search/AutocompleteSearch',
                minLength: 3,
                delay: 1000
            });
        });
    </script>
}

<hr />




<div class="row">
    <div class="col-md-8">
        @using (Html.BeginForm())
        {
            <fieldset>
                <legend>Event</legend>
                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.Date.StartTime, htmlAttributes: new {@class = "control-label"})
                                    @Html.EditorFor(model => model.Date.StartTime, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.ValidationMessageFor(model => model.Date.StartTime, "", new {@class = "text-danger"})
                                </div>
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.Date.EndTime, htmlAttributes: new {@class = "control-label"})
                                    @Html.EditorFor(model => model.Date.EndTime, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.ValidationMessageFor(model => model.Date.EndTime, "", new {@class = "text-danger"})
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TypeOfEvent.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                            @Html.DropDownListFor(model => model.TypeOfEvent.Id, ViewData["eventTypes"] as SelectList, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TypeOfEvent.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SubjectId, htmlAttributes: new { @class = "control-label col-md-3" })
                            @Html.DropDownListFor(model => model.SubjectId, ViewData["subjectSelectList"] as SelectList, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.LabelFor(model => model.InitiatorId, htmlAttributes: new { @class = "control-label col-md-3" })
                            @Html.EditorFor(model => model.InitiatorFullName, new { htmlAttributes = new { @class = "form-control", @id = "AutoCc" } })
                            @Html.ValidationMessageFor(model => model.InitiatorId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RoomId, htmlAttributes: new { @class = "control-label col-md-3" })
                            @Html.DropDownListFor(model => model.RoomId, ViewData["roomSelectList"] as SelectList, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RoomId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.LabelFor(model => model.GroupId, htmlAttributes: new { @class = "control-label col-md-3" })
                            @Html.DropDownListFor(model => model.GroupId, ViewData["groupSelectList"] as SelectList, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Date.IdType, htmlAttributes: new { @class = "control-label col-md-3" })
                            @Html.DropDownListFor(model => model.Date.IdType, ViewData["timeSlotTypes"] as SelectList, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Date.IdType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-3" })
                            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-3" })
                            @Html.EditorFor(model => model.IsDeleted, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </fieldset>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>