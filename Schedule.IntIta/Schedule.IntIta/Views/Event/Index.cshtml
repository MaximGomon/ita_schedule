@using Schedule.IntIta.Domain.Models
@using Schedule.IntIta.ViewModels
@model IEnumerable<Schedule.IntIta.ViewModels.EventViewModel>

@{
    ViewData["Title"] = "Events";
    
}

<h2>Events</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>


<script src="https://code.jquery.com/jquery-3.3.1.min.js"
        integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous"></script>
<script type="text/javascript">   
    function DoFilter() {
        $(".filtering").keydown(function (eventObject) {
            if (event.keyCode == 13) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Filter", "Event")",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify([
                        {
                            SearchString: $('#sType').val(),
                            EventField: 'TypeOfEvent'
                        },
                        {
                            SearchString: $('#sInitiator').val(),
                            EventField: 'InitiatorName'
                        },
                        {
                            SearchString: $('#sRoom').val(),
                            EventField: 'RoomName'
                        },
                        {
                            SearchString: $('#sGroup').val(),
                            EventField: 'GroupName'
                        }
                    ]),
                    dataType: "json",
                    success: function(result) {
                        //console.log(result);
                        console.log("sucess", data);

                    },
                    error: function(err) {
                        console.log("error", err);
                        location.reload();
                    }
                });
            }
        });
    }

    $(document).ready(function () {
       DoFilter();
    });

</script>

<table class="table-responsive table-striped table-bordered table-hover ">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            <div class="form-actions no-color">
                <p><input class ="filtering" type="text" id="sType" value="@ViewData["TypeFilter"]"/></p>
            </div>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date.StartTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date.EndTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SubjectId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InitiatorId)
            <div class="form-actions no-color">
                <p><input class ="filtering" type="text" id="sInitiator" value="@ViewData["InitiatorFilter"]"/></p>
            </div>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RoomId)
            <div class="form-actions no-color">
                <p><input class ="filtering" type="text" id="sRoom" value="@ViewData["RoomFilter"]"/></p>
            </div>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GroupId)
            <div class="form-actions no-color">
                <p><input class ="filtering" type="text" id="sGroup" value="@ViewData["GroupFilter"]"/></p>
            </div>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Comments)

        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsDeleted)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <th>
                @Html.DisplayFor(modelItem => item.TypeOfEvent.Name)
            </th>
            <th>
                @Html.DisplayFor(modelItem => item.Date.StartTime)
            </th>
            <th>
                @Html.DisplayFor(modelItem => item.Date.EndTime)
            </th>
            <td>
                @Html.DisplayFor(modelItem => item.SubjectName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InitiatorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RoomName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GroupName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comments)
            </td>
            <td>
                @*
            @(item.IsDeleted ? "y" : "n")
        *@
                @Html.DisplayFor(modelItem => item.IsDeleted)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new {id=item.Id}) |
                @Html.ActionLink("Delete", "Delete", new {id=item.Id})
            </td>
        </tr>
    }
    </tbody>
</table>

