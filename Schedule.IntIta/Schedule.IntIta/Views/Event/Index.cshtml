@using Domain.Models
@model IEnumerable<ViewModels.EventViewModel>

@{
    ViewData["Title"] = "Events";

    List<Subject> listSubjects = ViewBag.Subject;
    List<User> listUsers = ViewBag.User;
    List<Room> listRooms = ViewBag.Room;
    List<Group> listGroups = ViewBag.Group;
}

<h2>Events</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table-responsive table-striped table-bordered table-hover ">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TypeOfEvent.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date.StartTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date.EndTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SubjectId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InitiatorId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RoomId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GroupId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Comments)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsDeleted)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Id)
        </td>
        <th>
            @Html.DisplayFor(modelItem => item.TypeOfEvent.Name)
        </th>
        <th>
            @Html.DisplayFor(modelItem => item.Date.StartTime)
        </th>
        <th>
            @Html.DisplayFor(modelItem => item.Date.EndTime)
        </th>
        <td>
            @Html.DisplayFor(x => listSubjects.Single(s => s.Id == item.SubjectId).Name)
        </td>
        <td>
            @Html.DisplayFor(p => listUsers.Single(k => k.Id == item.InitiatorId).LastName)
        </td>
        <td>
            @Html.DisplayFor(p => listRooms.Single(k => k.Id == item.RoomId).Name)
        </td>
        <td>
            @Html.DisplayFor(p => listGroups.Single(k => k.Id == item.GroupId).Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Comments)
        </td>
        <td>
        @*
            @(item.IsDeleted ? "y" : "n")
        *@
            @Html.DisplayFor(modelItem => item.IsDeleted)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new {id=item.Id}) |
            @Html.ActionLink("Delete", "Delete", new {id=item.Id})
        </td>
    </tr>
}
    </tbody>
</table>
