@using Domain.Models
@using Domain.Models.Enumerations
@model Schedule.IntIta.ViewModels.RoomViewModel

@{
    ViewData["Title"] = "Create";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>

<h4>RoomViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.LabelFor(x => x.Name)
                @Html.EditorFor(x => x.Name)
                @Html.ValidationMessageFor(x => x.Name, null, new {@class = "field-validation-error"})
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.SeatNumber)
                @Html.EditorFor(x => x.SeatNumber)
                @Html.ValidationMessageFor(x => x.SeatNumber, null, new { @class = "field-validation-error" })
            </div>
            @*<div class="form-group">
                @Html.LabelFor(x => x.RoomStatus)
                @Html.DropDownListFor(x => x.RoomStatus, new SelectList(Enum.GetValues(typeof(RoomStatus))),"Select status")
                @Html.ValidationMessageFor(x => x.RoomStatus, null, new { @class = "field-validation-error" })
            </div>*@
            @*<div class="form-group">
                @Html.LabelFor(x => x.Office)
                @Html.DropDownListFor(x => x.Office, new SelectList(IEnumerable<Office>.typeof(RoomStatus)), "Select status")
                @Html.ValidationMessageFor(x => x.RoomStatus, null, new { @class = "field-validation-error" })
            </div>*@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
</body>
</html>
