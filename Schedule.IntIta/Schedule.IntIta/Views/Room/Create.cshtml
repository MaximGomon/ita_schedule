@using Domain.Models
@using Domain.Models.Enumerations
@model Schedule.IntIta.ViewModels.RoomViewModel

@{
    ViewData["Title"] = "Create";
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            @using (Html.BeginForm())
{
        <fieldset>
            <legend>Room</legend>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            @*@Html.LabelFor(x => x.Name)*@
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(x => x.Name)
                @Html.ValidationMessageFor(x => x.Name, null, new {@class = "field-validation-error"})
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(x => x.SeatNumber)*@
            @Html.LabelFor(model => model.SeatNumber, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(x => x.SeatNumber)
                @Html.ValidationMessageFor(x => x.SeatNumber, null, new {@class = "field-validation-error"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Office.Name, htmlAttributes: new {@class = "control-label col-md-3"})
            <div class="col-md-9">
                @Html.DropDownListFor(model => model.Office.Id, ViewData["offices"] as SelectList, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(x => x.RoomStatus, null, new {@class = "field-validation-error"})
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-default"/>
        </div>
    </fieldset>
        }

        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>