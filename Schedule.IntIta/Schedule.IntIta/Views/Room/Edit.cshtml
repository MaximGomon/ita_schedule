@using Domain.Models.Enumerations
@using Schedule.IntIta.Domain.Models.Enumerations
@model Schedule.IntIta.ViewModels.RoomViewModel

@{
    ViewData["Title"] = "Edit";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>

<h4>Editing room...</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div class="form-group">
                @Html.LabelFor(x => x.Name)
                @Html.EditorFor(x => x.Name)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.SeatNumber)
                @Html.EditorFor(x => x.SeatNumber)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.RoomStatus)
                @Html.DropDownList("RoomStatus", Html.GetEnumSelectList<RoomStatus>(),
                    "Select status", new {@class = ""})
                @*@Html.DropDownListFor(m => m.RoomStatus, ViewBag.RoomStatus as IEnumerable<SelectListItem>)*@
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.OfficeId)
                @Html.DropDownListFor(x => x.OfficeId, Model.Offices, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.RoomStatus, null, new { @class = "field-validation-error" })
            </div>
            
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="IsDeleted" /> @Html.DisplayNameFor(model => model.IsDeleted)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
</body>
</html>
