@using Domain.Models
@model IEnumerable<ViewModels.RoomViewModel>

@{
    ViewData["Title"] = "Rooms";
    List<Office> officesList = ViewBag.Office;
}

<h2>Rooms</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table-responsive table-striped table-bordered table-hover ">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SeatNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RoomStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OfficeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDeleted)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <th>
                    @Html.DisplayFor(modelItem => item.Name)
                </th>
                <th>
                    @Html.DisplayFor(modelItem => item.SeatNumber)
                </th>
                <th>
                    @Html.DisplayFor(modelItem => item.RoomStatus)
                </th>
                <td>
                    @Html.DisplayFor(x => officesList.Single(s => s.Id == item.OfficeId).Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsDeleted)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>
