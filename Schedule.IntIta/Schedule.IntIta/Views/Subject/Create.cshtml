@model Schedule.IntIta.ViewModels.SubjectViewModel

@{
    ViewData["Title"] = "Create";
    IEnumerable<String> colors = new List<string>()
    {
        "Red",
        "Green",
        "Blue",
        "Aqua",
        "BlueViolet",
        "Brown",
        "DarkMagenta",
        "Lime",
        "Yellow",
        "Orange",
        "Purple"
    };
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>

<h4>Subject</h4>
<hr />
@using (Html.BeginForm("Create", "Subject", FormMethod.Post))
{
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Name)
                    @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Name, null, new {@class = "field-validation-error"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Color)
                    @Html.DropDownListFor(model => model.Color, new SelectList(colors), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Color, null, new {@class = "field-validation-error"})
                </div>

               <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default"/>
                </div>
            </form>
        </div>
    </div>
}
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
</body>
</html>
