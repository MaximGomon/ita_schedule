@using Schedule.IntIta.Domain.Models.Enumerations
@model Schedule.IntIta.ViewModels.SubjectViewModel

@{
    ViewData["Title"] = "Edit";
    IEnumerable<String> colors = new List<string>()
    {
        "Red",
        "Green",
        "Blue",
        "Aqua",
        "BlueViolet",
        "Brown",
        "DarkMagenta",
        "Lime",
        "Yellow",
        "Orange",
        "Purple"
    };
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>

<h4>Subject</h4>
<hr />
    
    <div class="row">
        <div class="col-md-6">
            @using (Html.BeginForm())
            {
                <fieldset>
                    <legend>Subjects</legend>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => Model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Color)
                        @Html.DropDownListFor(model => model.Color, new SelectList(colors), htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(x => x.Color, null, new {@class = "field-validation-error"})
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-default"/>
                    </div>         
                </fieldset>
            }
        </div>
    </div>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
</body>
</html>
