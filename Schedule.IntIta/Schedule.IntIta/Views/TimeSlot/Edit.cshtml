@model Schedule.IntIta.ViewModels.TimeSlotViewModel

@{
    ViewData["Title"] = "Edit";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>

<h4>TimeSlotViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            @Html.HiddenFor(x => x.Id);
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.LabelFor(x => x.StartTime)
                @Html.EditorFor(x => x.StartTime)
             </div>
            <div class="form-group">
                @Html.LabelFor(x => x.EndTime)
                @Html.EditorFor(x => x.EndTime)
                <span asp-validation-for="EndTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.TypeId)
                @Html.DropDownListFor(x => x.TypeId, Model.Types, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.TypeId, null, new { @class = "field-validation-error" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Id)
                @Html.DisplayFor(x => x.Id)
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
</body>
</html>
